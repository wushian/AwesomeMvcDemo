@using AwesomeMvcDemo.Models
<div class="bar">
    <div style="float: right;">
        @Html.Awe().TextBox("txtSearch2").Placeholder("search...").CssClass("searchtxt")
    </div>
    <button type="button" onclick="$('#DinnersGrid2').data('api').inlineCreate()" class="awe-btn mbtn">Create</button>
    @{
        var chefId = Db.Chefs.First().Id;
        var meals = Db.Meals.Take(2).Select(o => o.Id).ToArray();
        var initObj = new { Name = "hi there", Date = DateTime.Now.ToShortDateString(), ChefId = chefId, MealsIds = meals, OrganicChecked = "checked" };
    }
    <button type="button" onclick="$('#DinnersGrid2').data('api').inlineCreate(@DemoUtils.Encode(initObj))" class="awe-btn mbtn">Create with predefined values</button>
</div>

@Html.InitDeletePopupForGrid("DinnersGrid2", "GridInlineEditDemo")

@(Html.Awe().Grid("DinnersGrid2")
      .Mod(o => o.PageInfo().InlineEdit(Url.Action("Create"), Url.Action("Edit")))
      .Url(Url.Action("GridGetItems"))
      .Parent("txtSearch2", "search")
      .Height(350)
      .Resizable(true)
      .Reorderable(true)
      .Columns(
          new Column { Bind = "Id", Width = 75 }.Mod(o => o.InlineId()),
          new Column { Bind = "Name" }.Mod(o => o.Inline(Html.Awe().TextBox("Name"))),
          new Column { Bind = "Date", Width = 170 }.Mod(o => o.Inline(Html.Awe().DatePicker("Date"))),
          new Column { Bind = "Chef.FirstName,Chef.LastName", ClientFormat = ".ChefName", Header = "Chef", Width = 200 }
            .Mod(o => o.Inline(Html.Awe().Lookup("Chef").Controller("ChefLookup"), "ChefId")),
          new Column { ClientFormat = ".Meals", Header = "Meals", Width = 220 }
            .Mod(o => o.Inline(Html.Awe().AjaxCheckboxList("Meals").Multiselect().DataFunc("utils.getItems(meals)"), "MealsIds")),
          new Column { Bind = "BonusMeal.Name", ClientFormat = ".BonusMeal", Header = "Bonus Meal" }
            .Mod(o => o.Inline(Html.Awe().AjaxRadioList("BonusMealId").DataFunc("utils.getItems(meals)").Odropdown(), "BonusMealId")),
            new Column { Bind = "Organic", Width = 100, ClientFormat = ".DispOrganic" }.Mod(o => o.InlineBool(cssClass: "btoggle")),
          new Column { ClientFormat = GridUtils.InlineEditFormat(), Width = 60 },
          new Column { ClientFormat = GridUtils.InlineDeleteFormat("deleteDinnersGrid2"), Width = 70 }))
